-- üöÄ Precise Low-Player Join (2‚Äì3 players) | API + Blind Hop Fallback
-- ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥:
-- 1) ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü 2‚Äì3 ‡∏Ñ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ API (‡∏°‡∏µ pagination + backoff ‡∏Å‡∏±‡∏ô 429)
-- 2) ‡∏ñ‡πâ‡∏≤ API ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ‡πÇ‡∏´‡∏°‡∏î Blind Hop ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏ó‡πÄ‡∏•‡∏Ø ‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏ô‡πÄ‡∏à‡∏≠ 2‚Äì3 ‡∏Ñ‡∏ô (‡∏û‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏î‡πâ‡∏ß‡∏¢ TeleportData)
-- 3) ‡∏Å‡∏±‡∏ô‡∏ß‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏î‡∏¥‡∏°‡∏ä‡πà‡∏ß‡∏á‡∏™‡∏±‡πâ‡∏ô ‡πÜ, ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà, ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ

local Players          = game:GetService("Players")
local HttpService      = game:GetService("HttpService")
local TeleportService  = game:GetService("TeleportService")
local StarterGui       = game:GetService("StarterGui")

local player     = Players.LocalPlayer
local placeId    = game.PlaceId
local myJobId    = game.JobId

-- ===== ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÑ‡∏î‡πâ =====
local AUTO_HOP            = true      -- ‡∏Ñ‡∏£‡∏ö 5 ‡∏Ñ‡∏ô -> ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤ -> ‡∏´‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü 2‚Äì3
local TARGET_FULL         = 5
local WAIT_BEFORE_HOP     = 200        -- ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

local MIN_PLAYERS         = 2         -- ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î
local MAX_PLAYERS         = 3         -- ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î

-- API Search
local MAX_PAGES           = 12        -- ‡πÑ‡∏•‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏µ‡πâ
local API_LIMIT           = 100       -- limit ‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤ (Roblox API ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö 10/25/50/100)
local API_BACKOFF_START   = 1.2       -- ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏î‡∏ô 429/‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
local API_BACKOFF_MAX     = 6         -- ‡∏´‡∏ô‡πà‡∏ß‡∏á‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
local API_JITTER          = 0.35      -- ‡∏™‡∏∏‡πà‡∏°‡∏Ç‡∏¢‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢ ‡∏•‡∏î‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ä‡∏ô 429
local PAGE_DELAY          = 0.25      -- ‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏ô‡πà‡∏ß‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤

-- Blind Hop (‡∏™‡∏∏‡πà‡∏°‡∏à‡∏ô‡πÄ‡∏à‡∏≠)
local BLIND_MAX_ATTEMPTS  = 28        -- ‡πÄ‡∏ó‡πÄ‡∏•‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏™‡∏∏‡πà‡∏°‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Å‡∏µ‡πà‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏ö
local BLIND_COOLDOWN      = 5.5       -- ‡∏´‡∏ô‡πà‡∏ß‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≠‡∏ö‡∏™‡∏∏‡πà‡∏° (‡∏Å‡∏±‡∏ô‡∏™‡πÅ‡∏õ‡∏°)
local REVISIT_TTL         = 120       -- ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏≥‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏î‡∏¥‡∏° (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
-- =======================

local isHopping     = false
local timeWhenFull  = nil

-- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å jobId ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÑ‡∏õ‡∏°‡∏≤: {id -> expireAt}
local visited = {}

local function now() return os.time() end

local function sysmsg(txt, rgb)
    pcall(function()
        StarterGui:SetCore("ChatMakeSystemMessage", {
            Text = txt;
            Color = rgb or Color3.fromRGB(200, 220, 255);
        })
    end)
end

local function pruneVisited()
    local t = now()
    for id, exp in pairs(visited) do
        if exp <= t then visited[id] = nil end
    end
end

print(("üöÄ Precise Low-Player Join | ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ %d‚Äì%d ‡∏Ñ‡∏ô"):format(MIN_PLAYERS, MAX_PLAYERS))
sysmsg("‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (‡∏û‡∏¥‡∏°‡∏û‡πå /help ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á)", Color3.fromRGB(120,255,120))

-- ===== ‡∏≠‡πà‡∏≤‡∏ô TeleportData ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏ô‡∏ï‡πà‡∏≠ Blind Hop ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÉ‡∏´‡∏°‡πà =====
task.defer(function()
    local join = player:GetJoinData()
    local td = join and join.TeleportData
    if td and td.mode == "acquire_lowpop" then
        local attempts = tonumber(td.attempts) or 0
        local maxA     = tonumber(td.maxAttempts) or BLIND_MAX_ATTEMPTS
        local minP     = tonumber(td.minP) or MIN_PLAYERS
        local maxP     = tonumber(td.maxP) or MAX_PLAYERS

        task.delay(0.5, function()
            local cnt = #Players:GetPlayers()
            if cnt >= minP and cnt <= maxP then
                sysmsg(("‚úÖ ‡∏û‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü %d ‡∏Ñ‡∏ô ‚Äî ‡∏´‡∏¢‡∏∏‡∏î‡πÑ‡∏•‡πà‡∏´‡∏≤"):format(cnt), Color3.fromRGB(0,255,120))
                return
            end
            if attempts >= maxA then
                sysmsg("‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î ‡∏´‡∏¢‡∏∏‡∏î Blind Hop", Color3.fromRGB(255,200,120))
                return
            end
            sysmsg(("üîÅ Blind Hop ‡∏ï‡πà‡∏≠ (‡∏£‡∏≠‡∏ö %d/%d) ‚Äî ‡∏Ñ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô %d"):format(attempts+1, maxA, cnt), Color3.fromRGB(255,215,120))
            task.wait(BLIND_COOLDOWN)
            local data = {
                mode = "acquire_lowpop",
                attempts = attempts + 1,
                maxAttempts = maxA,
                minP = minP, maxP = maxP,
            }
            TeleportService:Teleport(placeId, player, data)
        end)
    end
end)

-- ===== ‡∏î‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≤‡∏Å API ‡∏û‡∏£‡πâ‡∏≠‡∏° backoff ‡∏Å‡∏±‡∏ô 429 =====
local function fetchPage(cursor, backoff)
    local base = ("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=%d"):format(placeId, API_LIMIT)
    local url = cursor and (base .. "&cursor=" .. HttpService:UrlEncode(cursor)) or base

    local ok, resp = pcall(function()
        return game:HttpGet(url, true)
    end)

    if not ok or not resp or resp == "" then
        task.wait(math.min(backoff, API_BACKOFF_MAX) + math.random() * API_JITTER)
        return nil, backoff * 1.6
    end

    local ok2, data = pcall(function() return HttpService:JSONDecode(resp) end)
    if not ok2 or not data or not data.data then
        task.wait(math.min(backoff, API_BACKOFF_MAX) + math.random() * API_JITTER)
        return nil, backoff * 1.6
    end
    return data, API_BACKOFF_START
end

-- ===== ‡∏´‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü 2‚Äì3 ‡∏Ñ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ API (pagination) =====
local function findLowPlayersViaAPI()
    pruneVisited()
    local cursor, pages, backoff = nil, 0, API_BACKOFF_START
    local best = nil

    while pages < MAX_PAGES do
        pages += 1
        local data; data, backoff = fetchPage(cursor, backoff)
        if not data then
            if pages >= MAX_PAGES then break end
            task.wait(PAGE_DELAY)
            continue
        end

        for _, srv in ipairs(data.data) do
            local id        = srv.id
            local playing   = tonumber(srv.playing) or 0
            if  id ~= myJobId
            and playing >= MIN_PLAYERS and playing <= MAX_PLAYERS
            and not visited[id] then
                if (not best) or (playing < best.playing) then
                    best = {id = id, playing = playing}
                end
            end
        end

        if best then
            return best.id
        end

        cursor = data.nextPageCursor
        if not cursor then break end
        task.wait(PAGE_DELAY + math.random() * API_JITTER)
    end
    return nil
end

-- ===== Blind Hop: ‡∏™‡∏∏‡πà‡∏°‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏à‡∏≠ 2‚Äì3 ‡∏Ñ‡∏ô (‡∏û‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏î‡πâ‡∏ß‡∏¢ TeleportData) =====
local function blindHopUntilMatched()
    local data = {
        mode = "acquire_lowpop",
        attempts = 0,
        maxAttempts = BLIND_MAX_ATTEMPTS,
        minP = MIN_PLAYERS, maxP = MAX_PLAYERS,
    }
    sysmsg("üé≤ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡πÇ‡∏´‡∏°‡∏î Blind Hop ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏à‡∏≠ 2‚Äì3 ‡∏Ñ‡∏ô", Color3.fromRGB(255,215,120))
    TeleportService:Teleport(placeId, player, data)
end

-- ===== ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ Hop =====
local function doHop()
    if isHopping then return end
    isHopping = true
    sysmsg("‚è© ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü 2‚Äì3 ‡∏Ñ‡∏ô...", Color3.fromRGB(255,215,120))

    -- 1) ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏ú‡πà‡∏≤‡∏ô API ‡∏Å‡πà‡∏≠‡∏ô
    local target = findLowPlayersViaAPI()
    if target then
        visited[target] = now() + REVISIT_TTL
        local ok = pcall(function()
            TeleportService:TeleportToPlaceInstance(placeId, target, player)
        end)
        if ok then return end
        -- ‡∏ñ‡πâ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß -> ‡πÑ‡∏õ‡πÅ‡∏ú‡∏ô 2
    else
        print("API ‡∏´‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠/‡∏ñ‡∏π‡∏Å‡∏ö‡∏•‡πá‡∏≠‡∏Å -> ‡πÉ‡∏ä‡πâ Blind Hop")
    end

    -- 2) Blind Hop ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏à‡∏≠
    blindHopUntilMatched()
    isHopping = false
end

-- ===== Loop ‡∏´‡∏•‡∏±‡∏Å: ‡∏Ñ‡∏£‡∏ö 5 ‡∏Ñ‡∏ô -> ‡∏£‡∏≠ 20 ‡∏ß‡∏¥ -> Hop =====
task.spawn(function()
    while true do
        task.wait(5)
        if not AUTO_HOP or isHopping then continue end

        local c = #Players:GetPlayers()
        if c >= TARGET_FULL then
            if not timeWhenFull then
                timeWhenFull = tick()
                sysmsg(("‚è∞ ‡∏Ñ‡∏£‡∏ö %d ‡∏Ñ‡∏ô ‚Äî ‡∏à‡∏∞ Hop ‡πÉ‡∏ô %d ‡∏ß‡∏¥"):format(TARGET_FULL, WAIT_BEFORE_HOP), Color3.fromRGB(255,200,120))
            else
                local left = WAIT_BEFORE_HOP - (tick() - timeWhenFull)
                if left <= 0 then
                    timeWhenFull = nil
                    doHop()
                end
            end
        else
            timeWhenFull = nil
        end
    end
end)

-- ===== Log ‡πÄ‡∏Ç‡πâ‡∏≤/‡∏≠‡∏≠‡∏Å =====
Players.PlayerAdded:Connect(function(plr)
    print(("‚ûï %s ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ (‡∏£‡∏ß‡∏° %d)"):format(plr.Name, #Players:GetPlayers()))
end)
Players.PlayerRemoving:Connect(function(plr)
    task.wait(0.4)
    print(("‚ûñ %s ‡∏≠‡∏≠‡∏Å (‡πÄ‡∏´‡∏•‡∏∑‡∏≠ %d)"):format(plr.Name, #Players:GetPlayers()))
end)

-- ===== ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á =====
player.Chatted:Connect(function(msg)
    msg = msg:lower()
    if msg == "/go" then
        doHop()
    elseif msg == "/auto" then
        AUTO_HOP = not AUTO_HOP
        timeWhenFull = nil
        sysmsg(AUTO_HOP and "‚úÖ Auto: ON" or "‚ùå Auto: OFF",
            AUTO_HOP and Color3.fromRGB(0,255,120) or Color3.fromRGB(255,120,120))
    elseif msg == "/info" then
        local c = #Players:GetPlayers()
        sysmsg(("‚ÑπÔ∏è Players: %d | Target %d | Auto:%s"):format(c, TARGET_FULL, AUTO_HOP and "ON" or "OFF"))
    elseif msg == "/stop" then
        AUTO_HOP, isHopping, timeWhenFull = false, false, nil
        sysmsg("‚èπÔ∏è ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß", Color3.fromRGB(255,200,120))
    elseif msg == "/help" then
        sysmsg("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: /go /auto /info /stop /help")
    end
end)

-- ===== ‡πÅ‡∏à‡πâ‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏° =====
task.delay(1, function()
    sysmsg("‚úÖ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ 2‚Äì3 ‡∏Ñ‡∏ô)", Color3.fromRGB(120,255,120))
end)
